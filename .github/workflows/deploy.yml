name: Deploy serverless erp

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      deployment_environment:
        description: Environment to deploy
        type: choice
        options:
          - dev
          - test
          - prod
        default: dev
      region:
        description: AWS region to deploy
        type: choice
        options:
          - us-east-1
          - us-west-2
          - eu-west-1
          - ap-south-1
        default: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      ServiceEndpoint: ${{ steps.serverless-outputs.outputs.ServiceEndpoint }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: install serverless
        run: npm install -g serverless

      - name: Install dependencies
        shell: bash
        run: |
          cd ./serverless-erp
          npm ci

      - name: deploy serverless erp
        shell: bash
        run: |
          cd ./serverless-erp
          serverless deploy --stage ${{ inputs.deployment_environment || 'dev' }} --region ${{ inputs.region || 'us-east-1' }}
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

      - name: get serverless outputs
        id: serverless-outputs
        shell: bash
        run: |
          cd ./serverless-erp
          serverless info --json --stage ${{ inputs.deployment_environment || 'dev' }} --region ${{ inputs.region || 'us-east-1' }}

          endpoint=serverless info --json --stage ${{ inputs.deployment_environment || 'dev' }} --region ${{ inputs.region || 'us-east-1' }} | jq -r '.outputs[] | select(.OutputKey == "ServiceEndpoint") | .OutputValue'
          echo "ServiceEndpoint=$endpoint"
          echo "ServiceEndpoint=$endpoint" >> $GITHUB_OUTPUT
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

  integration-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install test dependencies
        shell: bash
        run: |
          cd ./serverless-erp
          npm ci

      - name: run integration tests
        shell: bash
        run: |
          cd ./serverless-erp
          npm run test:integration
        env:
          ServiceEndpoint: ${{ needs.deploy.outputs.ServiceEndpoint }}
